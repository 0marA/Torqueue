name: Deploy

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:
  clone:
    runs-on: self-hosted
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
  
  build-client:
    needs: [clone]
    runs-on: self-hosted
    steps:
      - name: Install packages
        run: |
          cd client
          npm ci
       
      - name: Build
        run: |
          cd client
          npm run build
        
      - name: Copy to server directory
        run: mv client/build backend/
    
  build-server:
    needs: [clone]
    runs-on: self-hosted
    steps:
      - name: Install packages
        run: |
          cd backend
          npm ci    
          
      - name: Copy env
        run: |
          cd backend
          echo "API_KEY=${{ secrets.API_KEY }}" >> .env
          echo "API_ID=${{ secrets.API_ID }}" >> .env
          echo "AUTH_DOMAIN=${{ secrets.AUTH_DOMAIN }}" >> .env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "MEASUREMENT_ID=${{ secrets.MEASUREMENT_ID }}" >> .env
          echo "MESSAGING_SENDER_ID=${{ secrets.MESSAGING_SENDER_ID }}" >> .env
          echo "PORT=${{ secrets.TOKEN }}" >> .env
          echo "PROJECT_ID=${{ secrets.PROJECT_ID }}" >> .env
          echo "REACT_APP_BACKEND_URL=${{ secrets.REACT_APP_BACKEND_URL }}" >> .env
          echo "STORAGE_BUCKET=${{ secrets.STORAGE_BUCKET }}" >> .env
      
  restart:
    if: always()
    needs: [build-client, build-server]
    runs-on: self-hosted
    
    steps:
      - name: Restart server
        run: sudo systemctl restart torqueue
